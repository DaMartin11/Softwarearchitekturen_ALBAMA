version: '3.8'

services:
  product_service:
    container_name: product_service
    build:
      context: .
      dockerfile: src/main/resources/Dockerfile
    depends_on:
      products_db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://products_db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=0993412740ali?
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SERVER_PORT=8085
    ports:
      - "8085:8085"
    networks:
      - mynetwork

  products_db:
    image: postgres:14
    container_name: products_db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: 0993412740ali?
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmqproduct
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5678:5672"
      - "15677:15672"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics ping"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
